// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    uid                String             @id
    name               String
    username           String             @unique
    email              String             @unique
    emailVerified      DateTime?
    password           String?
    image              String?
    balance            Float              @default(0)
    role               Role               @default(USER)
    companies          Company[]
    colaborators       Colaborators[]
    products           Product[]
    financial_accounts FinancialAccount[]
}

model Company {
    id          String   @id @default(cuid())
    image       String
    name        String
    username    String   @unique
    admin_id    String
    balance     Float    @default(0)
    sk_live     String?  @unique
    webhook_url String?
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    admin             User              @relation(fields: [admin_id], references: [uid])
    colaborators      Colaborators[]
    products          Product[]
    payouts           Payout[]
    checkout_sessions CheckoutSession[]
}

model Colaborators {
    id         String   @id @default(cuid())
    user_id    String
    company_id String
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt

    user    User    @relation(fields: [user_id], references: [uid])
    company Company @relation(fields: [company_id], references: [id])
}

model Product {
    id         String   @id @default(cuid())
    name       String
    price      Float
    image      String
    company_id String
    created_by String
    metadata   Json?
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt

    company     Company     @relation(fields: [company_id], references: [id])
    user        User        @relation(fields: [created_by], references: [uid])
    order_items OrderItem[]
}

model PaymentIntent {
    id                  String              @id @default(cuid())
    name                String
    email               String
    checkout_session_id String              @unique
    payment_method_id   String
    status              PaymentIntentStatus @default(VALIDATING)
    amount              Float
    commission          Float
    createdAt           DateTime            @default(now())
    updatedAt           DateTime            @updatedAt

    payment_method   PaymentMethod   @relation(fields: [payment_method_id], references: [id])
    checkout_session CheckoutSession @relation(fields: [checkout_session_id], references: [id])
}

model PaymentMethod {
    id        String            @id @default(cuid())
    name      String
    type      PaymentMethodType
    keyInfo   String
    createdAt DateTime          @default(now())
    updatedAt DateTime          @updatedAt

    payment_intent PaymentIntent[]
}

model Payout {
    id         String              @id @default(cuid())
    status     PaymentIntentStatus @default(VALIDATING)
    metadata   Json?
    company_id String
    createdAt  DateTime            @default(now())
    updatedAt  DateTime            @updatedAt

    company Company      @relation(fields: [company_id], references: [id])
    items   PayoutItem[]
}

model PayoutItem {
    id        String            @id @default(cuid())
    name      String
    email     String
    memo      String?
    amount    Float
    fee       Float
    payout_id String
    type      PaymentMethodType
    keyInfo   String
    createdAt DateTime          @default(now())
    updatedAt DateTime          @updatedAt

    payout Payout @relation(fields: [payout_id], references: [id])
}

model CheckoutSession {
    id             String         @id @default(cuid())
    company_id     String
    success_url    String?
    cancel_url     String?
    customer_name  String?
    customer_email String?
    expires_at     DateTime?
    metadata       Json?
    status         CheckoutStatus @default(VALID)
    createdAt      DateTime       @default(now())
    updatedAt      DateTime       @updatedAt

    company        Company        @relation(fields: [company_id], references: [id])
    order_items    OrderItem[]
    payment_intent PaymentIntent?
}

model OrderItem {
    id          String   @id @default(cuid())
    product_id  String
    quantity    Int
    checkout_id String
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    product          Product         @relation(fields: [product_id], references: [id])
    checkout_session CheckoutSession @relation(fields: [checkout_id], references: [id])
}

model FinancialAccount {
    id        String            @id @default(cuid())
    user_id   String
    account   PaymentMethodType
    keyInfo   String
    createdAt DateTime          @default(now())
    updatedAt DateTime          @updatedAt

    user User @relation(fields: [user_id], references: [uid])
}

enum Role {
    ADMIN
    USER
}

enum PaymentIntentStatus {
    UNPAID
    VALIDATING
    PAID
}

enum PaymentMethodType {
    BBVA
    BCP
    INTERBANK
    YAPE
    PLIN
}

enum CheckoutStatus {
    EXPIRED
    VALID
}
